package it.gabrielebologna.grandanticheat.check.exploit;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.scheduler.BukkitRunnable;

import com.comphenix.packetwrapper.WrapperPlayClientTransaction;
import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;

import it.gabrielebologna.grandanticheat.GrandAntiCheat;
import it.gabrielebologna.grandanticheat.check.Check;

public class PingSpoof extends Check
{
	public PingSpoof()
	{
		super("PingSpoof");
		
		Check chick = this;
		
		ProtocolLibrary.getProtocolManager().addPacketListener(new PacketAdapter(GrandAntiCheat.getPlugin(), PacketType.Play.Client.TRANSACTION)
        {
            public void onPacketReceiving(final PacketEvent event)
            {
            	if (!chick.isToggled("bad-ping"))
            	{
            		return;
            	}

                WrapperPlayClientTransaction wrapperPlayClientTransaction = new WrapperPlayClientTransaction(event.getPacket());
                
                if (wrapperPlayClientTransaction.getWindowId() != 111)
                {
                	return;
                }
                
                long transactionDiff = Math.abs(System.currentTimeMillis() - GrandAntiCheat.getPlayerDataManager().getPlayerData(event.getPlayer()).getLastFlyingPacket());
                long keepAliveDiff = Math.abs(System.currentTimeMillis() - GrandAntiCheat.getPlayerDataManager().getPlayerData(event.getPlayer()).getLastKeepAlivePacket());
                
                if (keepAliveDiff > 5000L && transactionDiff < 60L)
                {
                	GrandAntiCheat.getFlagManager().flagPlayer(event.getPlayer(), chick, "Type B - Bad ping", "Ping: " + GrandAntiCheat.getPlayerDataManager().getPlayerData(event.getPlayer()).getPing() + ", TPS: " + GrandAntiCheat.getLagManager().getTPS(), true);
                }
            }
        });
	}
	
	@Override
	public void setup()
	{
		if (GrandAntiCheat.isDebugMode())
		{
			this.getSettings().addDefault("ping-fix", true);
			this.getSettings().addDefault("bad-ping", true);
			this.getSettings().addDefault("cancel", true);
		}
	}

	@SuppressWarnings("deprecation")
	@EventHandler
	public void onJoin(PlayerJoinEvent event)
	{
		if (this.isToggled("ping-fix"))
		{
			fixPing(event.getPlayer());		
			
			Bukkit.getScheduler().runTaskLater(GrandAntiCheat.getPlugin(), new BukkitRunnable()
			{	
				@Override
				public void run()
				{
					fixPing(event.getPlayer());
				}
			}, 60L);
		}
	}
	
	private void fixPing(Player player)
	{
		if (this.isToggled("ping-fix"))
		{
			int ping = getPing(player);
			
			if (ping > 1000 || ping < 0)
			{
				setPing(player, 50);
			}
		}
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private int getPing(Player player)
	{
		int ping = 100;

		try
		{
			Class craftPlayerClass = Class.forName("org.bukkit.craftbukkit." + Bukkit.getServer().getClass().getPackage().getName().substring(23) + ".entity.CraftPlayer");
			Object handle = craftPlayerClass.getMethod("getHandle").invoke(craftPlayerClass.cast(player));
			ping = handle.getClass().getDeclaredField("ping").getInt(handle);
		}
		catch (Exception ex)
		{
			
		}
		
		return ping;
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void setPing(Player player, int ping)
	{
		try
		{
			Class craftPlayerClass = Class.forName("org.bukkit.craftbukkit." + Bukkit.getServer().getClass().getPackage().getName().substring(23) + ".entity.CraftPlayer");
			Object handle = craftPlayerClass.getMethod("getHandle").invoke(craftPlayerClass.cast(player));
			handle.getClass().getDeclaredField("ping").set(handle, 50);
		}
		catch (Exception ex)
		{
			
		}
	}
}