package it.gabrielebologna.grandanticheat.check.exploit;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import org.bukkit.entity.Player;

import com.comphenix.packetwrapper.WrapperPlayClientSettings;
import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;

import it.gabrielebologna.grandanticheat.GrandAntiCheat;
import it.gabrielebologna.grandanticheat.check.Check;
import it.gabrielebologna.grandanticheat.player.PlayerData;

public class SkinDerp extends Check
{
    private Map<UUID, Long> playerLastSkinChangeTime;
    private Map<UUID, Byte> playerLastSkinSettings;
    private PacketAdapter clientSettingsEvent;
    private int threshold = 100;
	
	public SkinDerp()
	{
		super("SkinDerp");
		
        playerLastSkinChangeTime = new HashMap<>();
        playerLastSkinSettings = new HashMap<>();

        clientSettingsEvent = new PacketAdapter(GrandAntiCheat.getPlugin(), ListenerPriority.HIGH, PacketType.Play.Client.SETTINGS)
        {
            @Override
            public void onPacketReceiving(PacketEvent event)
            {
                handleClientSettingsEvent(event);
            }
        };

        ProtocolLibrary.getProtocolManager().addPacketListener(clientSettingsEvent);
	}
	
    private void handleClientSettingsEvent(PacketEvent e)
    {
        Player p = e.getPlayer();
        PlayerData playerData = GrandAntiCheat.getPlayerDataManager().getPlayerData(p);
        UUID pUUID = p.getUniqueId();

        WrapperPlayClientSettings settingsPacket = new WrapperPlayClientSettings(e.getPacket());

        if (!playerLastSkinChangeTime.containsKey(pUUID))
        {
            playerLastSkinChangeTime.put(pUUID, System.currentTimeMillis());
            return;
        }

        long lastChangeTime = playerLastSkinChangeTime.get(pUUID);
        long currentTime = System.currentTimeMillis();

        if (lastChangeTime + threshold >= currentTime)
        {
            if(!playerLastSkinSettings.containsKey(pUUID))
            {
                playerLastSkinSettings.put(pUUID, (byte)settingsPacket.getDisplayedSkinParts());
                return;
            }

            byte lastSkinSettings = playerLastSkinSettings.get(pUUID);
            byte newSkinSettings = (byte)settingsPacket.getDisplayedSkinParts();

            if (lastSkinSettings != newSkinSettings)
            {
            	e.setCancelled(true);

            	for (int i = 0; i < 10; i++)
            	{
                    GrandAntiCheat.getFlagManager().flagPlayer(p, this, "Type A - Skin settings", "Ping: " + playerData.getPing() + ", TPS: " + GrandAntiCheat.getLagManager().getTPS(), true);
            	}
            }
        }

        playerLastSkinChangeTime.put(pUUID, currentTime);
        playerLastSkinSettings.put(pUUID, (byte)settingsPacket.getDisplayedSkinParts());
    }
}